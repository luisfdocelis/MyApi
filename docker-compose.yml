version: '3.8'
services:
  nginx:
    image: nginx:latest
    hostname: nginx
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app
      - postgresql-server
    networks:
      - load_balancer
    volumes:
      - ./nginx/ssl:/etc/nginx/ssl/
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/ssl_passwords:/var/run/nginx/ssl_passwords

  app:
    hostname: app
    deploy:
      replicas: 3
      mode: replicated
      endpoint_mode: dnsrr
    environment:
      - ASPNETCORE_HTTP_PORTS=8080
      # - ASPNETCORE_URLS=http://+:80;https://+:443
      - ASPNETCORE_HTTPS_PORTS=8443
      - ASPNETCORE_Kestrel__Certificates__Default__Password=q1w2e3r4
      - ASPNETCORE_Kestrel__Certificates__Default__Path=/https/aspnetapp.pfx
      - ASPNETCORE_ENVIRONMENT=Staging
    volumes:
      - $USERPROFILE/.aspnet/https:/https/
    links:
      - "postgresql-server:database"
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - '8080'
    depends_on:
      - postgresql-server
    networks:
      - load_balancer

  postgresql-server:
    hostname: postgresql-server
    container_name: postgresql_server
    image: 'postgres:latest'
    ports:
      - '5432:5432'
    volumes:
      - './postgres/data:/var/lib/postgresql/data'
      - './postgres/init.sql:/docker-entrypoint-initdb.d/init.sql'
    env_file:
      - .env
    networks:
      - load_balancer

volumes:
  psql:
    external: false
networks:
  load_balancer:
    external: false